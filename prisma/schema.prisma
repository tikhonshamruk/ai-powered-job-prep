// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ExperienceLevel {
  junior
  mid
  senior
  lead
}

enum QuestionDifficulty {
  easy
  medium
  hard
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  jobInfos JobInfo[]
  
  @@map("users")
}

model JobInfo {
  id              String           @id @default(uuid())
  title           String?
  name            String
  experienceLevel ExperienceLevel
  description     String
  userId          String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  
  // Relations
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions  Question[]
  interviews Interview[]
  
  @@map("job_info")
}

model Question {
  id         String            @id @default(uuid())
  jobInfoId  String
  text       String
  difficulty QuestionDifficulty
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  
  // Relations
  jobInfo JobInfo @relation(fields: [jobInfoId], references: [id], onDelete: Cascade)
  
  @@map("questions")
}

model Interview {
  id         String   @id @default(uuid())
  jobInfoId  String
  duration   String
  humeChatId String?
  feedback   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relations
  jobInfo JobInfo @relation(fields: [jobInfoId], references: [id], onDelete: Cascade)
  
  @@map("interviews")
}
